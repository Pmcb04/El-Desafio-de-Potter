
  // s = {"houses,
          new wands,
          character characters who are going to duel*,
          duels,
          duel results,
          end of simulation,
          dungeon characters,
          the winner house is
            "}

String s += ":";
System.out.println(s);

for(int i = 0; i < s.lenght(); i++)
    System.out.print("-");

System.out.println();

--------------------------------------------------------------------------------
* antes de imprimir, llamar a:

System.out.printf("turn <%s>%n", turn)
      // turn turno (por parametro);

--------------------------------------------------------------------------------

System.out.printf("house <%s>%n", nom)
      // nom es el nombre de la houses

--------------------------------------------------------------------------------

System.out.printf("character:<%s> <e: %f> <o: %f> <d: %f> <wand: %s (%s)>", e, o, d, nomWard, typeWard);
      // e (Puntos de energia == energy)
      // o (Puntos ofensivos == offensive)
      // d (Puntos defensivos == defensive)
      // nomWard (nombre de la varita)
      // typeWard (tipo de la varita)

--------------------------------------------------------------------------------

System.out.printf("wand: <%s (%s)>%n", nomWard, typeWard)
      // nomWard (nombre de la varita)
      // typeWard (tipo de la varita)


--------------------------------------------------------------------------------

System.out.printf("<%s> is dueling against <%s>%n
                  attack points of <%s> are: <%f>%n
                  resistance points of <%s> are: <%f>%n
                  the remaining energy of <%s> after the duel are: <%f>",
                  nomAta, nombDef, nomAta, oa, nomDef, df, nomDef, eDef%n%n);

        // nomAta (Nombre del atacante)
        // nomDef (Nombre del atacado)
        // oa (Puntos de ataque del atacante)
        // df (Puntos de defensa del atacado)
        // eDef (Puntos de energia del atacado despues del ataque)
